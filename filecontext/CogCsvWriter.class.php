<?php

class CogCsvWriter
{

	private $filehandle;
	private $fields;
	private $delimiter = ',';
	private $enclosure = '"';

	/**
	 * Constructor
	 * 
	 * @param resource $fileHandleOrPath The file handle of the file, usually generated by fopen	 *
	 */
	public function __construct($fileHandleOrPath)
	{
		if ($fileHandleOrPath !== null)
		{
			$this->filehandle = $fileHandleOrPath;
		}
	}

	/**
	 * Sets the file handle.
	 * @param resource $filehandle
	 */
	public function setFilehandle($filehandle)
	{
		if ($filehandle !== null)
		{
			$this->filehandle = $filehandle;
		}
	}

	/**
	 * Sets the array of fields to be written.
	 * @param array $fields
	 */
	public function setFieldsArray($fields)
	{
		if (!is_null($fields) && is_array($fields))
		{
			$this->fields = $fields;
		}
	}

	public function setDataArray($array)
	{
		$this->setFieldsArray($array);
	}

	/**
	 * Sets the field delimeter character.
	 * @param string $delim
	 */
	public function setDelimeter($delim)
	{
		if ($delim !== null)
		{
			$this->delim = $delim;
		}
	}

	/**
	 * Sets the field enclosure character.
	 * @param string $fieldEnclosure A character
	 */
	public function setEnclosure($fieldEnclosure)
	{
		if ($fieldEnclosure !== null)
		{
			$this->enclosure = $fieldEnclosure;
		}
	}

	public function writeLine()
	{
		$args = array();
		$length_written = null;
		if ($this->filehandle !== null)
		{
			if ($this->fields !== null)
			{
				array_push($args, $this->filehandle, $this->fields);
				if ($this->delimiter !== null)
				{
					array_push($args, $this->delimiter);
				}
				if ($this->enclosure !== null)
				{
					array_push($args, $this->enclosure);
				}
			}
			$length_written = call_user_func_array('fputcsv', $args);
			return $length_written;
		}
	}

}

?>
